1.在vscode上配置ROS环境 (可使用vscode-insider版本完全解决ros配置问题)
  安装ROS插件
  运行catkin_make -DCMAKE_EXPORT_COMPILE_COMMANDS=Yes命令
  在c_cpp_properties.json文件中添加"compileCommands": "${workspaceFolder}/build/compile_commands.json"

2.创建一个ros package，catkin_create_pkg pkg_name roscpp rospy std_msgs

3.自定义msg需要设置相应pkg中的package.xml，添加如下：
  <build_depend>message_generation</build_depend>
  <exec_depend>message_runtime</exec_depend>
  CMakeLists.txt修改如下：
  find_package(catkin REQUIRED COMPONENTS roscpp std_msgs message_generation) 注意：这是添加catkin需要的pkg
  add_message_files(FILES name.msg)
  generate_messages(DEPENDENCIES std_msgs)
  catkin_package( CATKIN_DEPENDS roscpp std_msgs message_runtime)

4.topic使用
  publisher：查看topic_test教程
  Subscriber: 同上

5.srv消息类型
  中间使用---隔开，上半部分是request，下半部分是respone

6.service使用
  ServiceClient：查看service_test教程
  ServiceServer：同上
  注意：使用时必须保证两者的模板类型相同，否则会产生通信错误

7.ros::NodeHandle若在创建时传入参数,则表示特定name的nodehandle,详情参考http://wiki.ros.org/action/fullsearch/roscpp/Overview/NodeHandles?action=fullsearch&context=180&value=linkto%3A%22roscpp%2FOverview%2FNodeHandles%22


8.使用vscode编写python ros时,自定义msg找不到解决方案, 在setting.json文件中添加  "python.jediEnabled": true 命令; 注意:使用Python ros时, scripts文件中的.py文件不能与ros pkg重名

9.ros python 编程, 第一行需添加 #!/usr/bin/env python3 意为 选择编译程序的编译器

10.运行Python节点, ①python3 + file_name; ②(推荐) 将file chmod 755 为可执行文件, 然后 rosrun pkg_name file_name

11.引同一工作空间下的其他包中的.h文件 https://blog.csdn.net/weixin_43651761/article/details/85557291

12.关于ros CMakeLists.txt文件的几个选项含义:
   catkin_package()选项中目的是告诉catkin_workspace, 在当前pkg中有include..., 相当于向外公布,以便于其他的pkg使用当前pkg中的.h或者其他
   include_directories(include  ${catkin_INCLUDE_DIRS})是针对与当前pkg的, 其目的是告诉当前的pkg,所需要的.h以及其他所在的位置, 选项中的'include'是指当前pkg中的include文件夹, ${catkin_INCLUDE_DIRS}指的是catkin_workspace中的.h
   
